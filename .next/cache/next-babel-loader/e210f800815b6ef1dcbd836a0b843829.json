{"ast":null,"code":"var _jsxFileName = \"/home/oliver/Documents/projects/Unilous/pages/UserPage.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PostSmallList from '../src/components/post/PostSmallList';\nimport FormContainer from '../src/components/text-field/FormContainer';\nimport ReferenceLink from '../src/components/text-field/ReferenceLink'; // import '../src/static/css/pages/userPage.css'\n\nimport userIcon from '../src/static/svg/userB.svg';\n\nconst UserPage = props => {\n  //   const [currentUser, setCurrentUser] = useState(null)\n  //   const message = useField('text')\n  //   const decodedUser = decodeURIComponent(props.userUsername)\n  //   const userQuery = useQuery(FIND_USER, {\n  //     variables: {username: decodedUser}\n  //   })\n  //   const onError = (e) => {\n  //     const eMessage = e.message\n  //     if (eMessage.includes('Path `message` (')) {\n  //       triggerAlert('warning', `message$: message of ${message.fields.value.length} characters cannot be more than 800 characters`, props.setAlert, props.resetAlert)\n  //     }\n  //   }\n  //   const [sendMessage] = useMutation(MAKE_NOTIFICATION, {\n  //     onError\n  //   })\n  //   const handleMessage = async () => {\n  //     if (!message.fields.value.length) {\n  //       triggerAlert('warning', `message$: message field is required`, props.setAlert, props.resetAlert)\n  //       return null\n  //     }\n  //     const result = await sendMessage({\n  //         variables: {\n  //             userFromId: props.currentUser._id,\n  //             userToId: currentUser._id,\n  //             message: message.fields.value,\n  //         }\n  //     })\n  //     if (result) {\n  //         message.reset()\n  //         triggerAlert('success', `sent: message has been sent to ${currentUser.username}`, props.setAlert, props.resetAlert)\n  //     }\n  // }\n  //   const userConditions = () => {\n  //     const query = userQuery.data\n  //     const reducer = currentUser\n  //     if (!query) return null\n  //     if (!query.findUser) return null\n  //     if (!reducer || reducer.username !== query.username) return query.findUser\n  //     return null\n  //   }\n  //   const user = userConditions()\n  //   useEffect(() => {\n  //     if (user) {\n  //       setCurrentUser(user)\n  //     }\n  //   }, [user, setCurrentUser])\n  //   if (!currentUser) {\n  //     return (\n  //       <div>\n  //           <div style={{height: '15vh'}}/>\n  //           <Loading />\n  //       </div>\n  //     )\n  //   }\n  //   const pallette = palletteGenerator(\"rgb(40,40,40)\").colorPallette\n  return __jsx(\"div\", {\n    className: \"userPage-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"navbar-height\",\n    style: {\n      gridColumn: '1/3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"UP-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"UP-title-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    className: \"UP-title-icon\",\n    src: userIcon,\n    alt: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }), __jsx(\"h2\", {\n    className: \"UP-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, currentUser.username)), __jsx(\"h3\", {\n    className: \"UP-title\",\n    style: {\n      opacity: '0.8'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"profile link\"), __jsx(ReferenceLink, {\n    rl: currentUser.referenceLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), __jsx(\"h2\", {\n    className: \"UP-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"posts\"), __jsx(\"div\", {\n    className: \"UP-posts-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(PostSmallList, {\n    posts: currentUser.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }))), __jsx(FormContainer, {\n    pallette: pallette,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, \"contact \", currentUser.username), __jsx(\"h4\", {\n    className: \"form-title-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, \"message\"), __jsx(\"div\", {\n    className: \"form-field-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, __jsx(\"textarea\", _extends({\n    className: \"form-field\"\n  }, message.fields, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-submit-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, __jsx(\"h4\", {\n    onClick: () => handleMessage(),\n    className: \"form-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, \"send\"))));\n}; // const mapStateToProps = (state) => {\n// \treturn {\n//     currentUser: state.currentUser        \n// \t}\n// }\n// export default connect(\n//   mapStateToProps,\n//   {setAlert, resetAlert}\n// )(UserPage)\n\n\nexport default UserPage;","map":{"version":3,"sources":["/home/oliver/Documents/projects/Unilous/pages/UserPage.js"],"names":["React","PostSmallList","FormContainer","ReferenceLink","userIcon","UserPage","props","gridColumn","currentUser","username","opacity","referenceLink","posts","pallette","message","fields","handleMessage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PostSmallList from '../src/components/post/PostSmallList'\nimport FormContainer from '../src/components/text-field/FormContainer'\nimport ReferenceLink from '../src/components/text-field/ReferenceLink'\n// import '../src/static/css/pages/userPage.css'\nimport userIcon from '../src/static/svg/userB.svg'\n\nconst UserPage = (props) => {\n  //   const [currentUser, setCurrentUser] = useState(null)\n  //   const message = useField('text')\n  //   const decodedUser = decodeURIComponent(props.userUsername)\n  //   const userQuery = useQuery(FIND_USER, {\n  //     variables: {username: decodedUser}\n  //   })\n  //   const onError = (e) => {\n  //     const eMessage = e.message\n  //     if (eMessage.includes('Path `message` (')) {\n  //       triggerAlert('warning', `message$: message of ${message.fields.value.length} characters cannot be more than 800 characters`, props.setAlert, props.resetAlert)\n  //     }\n  //   }\n  //   const [sendMessage] = useMutation(MAKE_NOTIFICATION, {\n  //     onError\n  //   })\n  //   const handleMessage = async () => {\n  //     if (!message.fields.value.length) {\n  //       triggerAlert('warning', `message$: message field is required`, props.setAlert, props.resetAlert)\n  //       return null\n  //     }\n  //     const result = await sendMessage({\n  //         variables: {\n  //             userFromId: props.currentUser._id,\n  //             userToId: currentUser._id,\n  //             message: message.fields.value,\n  //         }\n  //     })\n  //     if (result) {\n  //         message.reset()\n  //         triggerAlert('success', `sent: message has been sent to ${currentUser.username}`, props.setAlert, props.resetAlert)\n  //     }\n  // }\n\n  //   const userConditions = () => {\n  //     const query = userQuery.data\n  //     const reducer = currentUser\n  //     if (!query) return null\n  //     if (!query.findUser) return null\n  //     if (!reducer || reducer.username !== query.username) return query.findUser\n  //     return null\n  //   }\n\n  //   const user = userConditions()\n  //   useEffect(() => {\n  //     if (user) {\n  //       setCurrentUser(user)\n  //     }\n  //   }, [user, setCurrentUser])\n  //   if (!currentUser) {\n  //     return (\n  //       <div>\n  //           <div style={{height: '15vh'}}/>\n  //           <Loading />\n  //       </div>\n  //     )\n  //   }\n  //   const pallette = palletteGenerator(\"rgb(40,40,40)\").colorPallette\n    return (\n        <div className=\"userPage-container\">\n          <div className=\"navbar-height\" style={{gridColumn: '1/3'}} />\n          <div className=\"UP-content\">\n            <div className=\"UP-title-container\">\n              <img className=\"UP-title-icon\" src={userIcon} alt=\"user\" />\n              <h2 className=\"UP-title\">{currentUser.username}</h2>\n            </div>\n            <h3 className=\"UP-title\" style={{opacity: '0.8'}}>profile link</h3>\n            <ReferenceLink rl={currentUser.referenceLink} />\n            <h2 className=\"UP-title\">posts</h2>\n            <div className=\"UP-posts-container\">\n              <PostSmallList posts={currentUser.posts} />\n            </div>\n          </div>\n            <FormContainer pallette={pallette} >\n                  <h3 className=\"form-title\">contact {currentUser.username}</h3>\n                  <h4 className=\"form-title-secondary\">message</h4>\n                  <div className=\"form-field-container\">\n                    <textarea className=\"form-field\" {...message.fields} />\n                  </div >\n                  <div className=\"form-submit-button-container\">\n                    \n                  <h4 onClick={() => handleMessage()} className=\"form-submit-button\">send</h4>\n                  </div>\n            </FormContainer>\n        </div>\n    )\n}\n\n// const mapStateToProps = (state) => {\n// \treturn {\n//     currentUser: state.currentUser        \n// \t}\n// }\n// export default connect(\n//   mapStateToProps,\n//   {setAlert, resetAlert}\n// )(UserPage)\n\nexport default UserPage; "]},"metadata":{},"sourceType":"module"}